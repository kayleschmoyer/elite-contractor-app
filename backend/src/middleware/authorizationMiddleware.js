// backend/src/middleware/authorizationMiddleware.js
import { Role } from '@prisma/client'; // Import Role enum generated by Prisma
import logger from '../utils/logger.js';

/**
 * Middleware to check if the authenticated user has the ADMIN role.
 * Assumes authMiddleware has already run and attached req.user.
 */
const isAdmin = (req, res, next) => {
    // Check if user object exists and has the ADMIN role
    if (!req.user || req.user.role !== Role.ADMIN) {
        logger.warn(`Authorization denied: User ${req.user?.userId || 'UNKNOWN'} with role ${req.user?.role || 'UNKNOWN'} attempted admin action.`);
        // 403 Forbidden indicates authenticated but not permitted
        return res.status(403).json({ message: 'Forbidden: Administrator access required.' });
    }

    // If user is an ADMIN, proceed to the next middleware or route handler
    next();
};

// You could add other role checks here later, e.g., checkRole(['ADMIN', 'MANAGER'])
// export const checkRole = (allowedRoles) => (req, res, next) => { ... }

export { isAdmin }; // Exporting as named export